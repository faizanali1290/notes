Map
Map is a collection of keyed data items, just like an Object. But the main difference is that Map allows keys of any type.


Methods and properties are:

new Map() – creates the map.
map.set(key, value) – stores the value by the key.
map.get(key) – returns the value by the key, undefined if key doesn’t exist in map.
map.has(key) – returns true if the key exists, false otherwise.
map.delete(key) – removes the element (the key/value pair) by the key.
map.clear() – removes everything from the map.
map.size – returns the current element count.
map.entrires is uesd to convert object property to array
map.values()
map.keys()
Object.fromEntries is used to find  nest parir collection to convert object . it also used to Map to convert Object

set


it has similarities of array it sore collection of values with uniquely
A Set is a special type collection – “set of values” (without keys), where each value may occur only once.

new Set([iterable]) – creates the set, and if an iterable object is provided (usually an array), copies values from it into the set.
set.add(value) – adds a value, returns the set itself.
set.delete(value) – removes the value, returns true if value existed at the moment of the call, otherwise false.
set.has(value) – returns true if the value exists in the set, otherwise false.
set.clear() – removes everything from the set.
set.size – is the elements count.


